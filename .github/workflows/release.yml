# This file is autogenerated by maturin v1.2.3
# To update, run
#
#    maturin generate-ci github
#
name: Release

on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        # target: [x86_64, aarch64, armv7, s390x, ppc64le]
        target: [x86_64]
        include:
          - target: x86_64
            docker_image: quay.io/pypa/manylinux_2_28_x86_64:latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          container: ${{ matrix.docker_image }}
          args: --release --out dist --find-interpreter --features dynamic
          manylinux: auto
          docker-options: |
            -e RUST_BACKTRACE=1
            -e DEP_JXL_LIB=${{ github.workspace }}/jpegxl-rs/jpegxl-src/libjxl/build/lib
            -e DEP_BROTLI_LIB=${{ github.workspace }}/jpegxl-rs/jpegxl-src/libjxl/build/third_party/brotli
            -e DEP_HWY_LIB=${{ github.workspace }}/jpegxl-rs/jpegxl-src/libjxl/build/third_party/highway
          before-script-linux: |
            cd jpegxl-rs/jpegxl-src/libjxl
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
              -DJPEGXL_ENABLE_TOOLS=OFF -DJPEGXL_ENABLE_DOXYGEN=OFF -DJPEGXL_ENABLE_MANPAGES=OFF \
              -DJPEGXL_ENABLE_BENCHMARKS=OFF -DJPEGXL_ENABLE_EXAMPLES=OFF -DJPEGXL_ENABLE_JNI=OFF \
              -DJPEGXL_ENABLE_SJPEG=OFF -DJPEGXL_ENABLE_OPENEXR=OFF
            cmake --build build
            cmake --install build
            cd ../../../

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  windows:
    runs-on: windows-latest
    timeout-minutes: 60
    strategy:
      matrix:
        target: [x64]
    steps:
      - name: Install dependencys
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-libjxl
      
      - name: Put MSYS2_MinGW64 on PATH
        # there is not yet an environment variable for this path from msys2/setup-msys2
        run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env: 
          RUST_BACKTRACE: 1
        with:
          rust-toolchain: stable-x86_64-pc-windows-gnu
          target: x86_64-pc-windows-gnu
          args: --release --out wheels --find-interpreter --features dynamic
          sccache: 'true'

      - name: Fix wheels with delvewheel
        run: |
          pip install delvewheel
          Get-ChildItem ${{ github.workspace }}/wheels/*win_amd64.whl | ForEach-Object -Process {delvewheel repair $PSItem -w dist}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          architecture: ${{ matrix.target }}
      
      - name: Check dependencys
        run: |
          brew install jpeg-xl
          ls /opt/homebrew/Cellar/jpeg-xl/
          ls /opt/homebrew/Cellar/brotli/
          ls /opt/homebrew/Cellar/highway/

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env: 
          RUST_BACKTRACE: 1
          MACOSX_DEPLOYMENT_TARGET: 12.7
          # from homebrew
          DEP_JXL_LIB: /opt/homebrew/Cellar/jpeg-xl/0.10.2/lib
          DEP_BROTLI_LIB: /opt/homebrew/Cellar/brotli/1.1.0/lib
          DEP_HWY_LIB: /opt/homebrew/Cellar/highway/1.1.0/lib
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features dynamic
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: 
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
      - name: upload to github release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            wheels-*/*.whl
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'dev') }}
      - name: Publish to TestPyPI
        if: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'dev') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.TESTPYPI_API_TOKEN }}
          MATURIN_REPOSITORY_URL: https://test.pypi.org/legacy/ 
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
      - name: Publish to PyPI
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'dev') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
