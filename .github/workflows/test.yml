name: Test Python

on: [push, pull_request]

env:
  RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
  RUST_BACKTRACE: 1

jobs:
  test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # we only use windows for fast testing
        os: [windows-latest]
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Graphviz
        uses: ts-graphviz/setup-graphviz@v2

      - name: Create virtual environment
        env:
          BIN: ${{ matrix.os == 'windows-latest' && 'Scripts' || 'bin' }}
        run: |
          python -m venv .venv
        
      - name: Set msys2 environment
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-libjxl
      
      - name: Put MSYS2_MinGW64 on PATH
        # there is not yet an environment variable for this path from msys2/setup-msys2
        run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install python dependencies
        run: pip install -r requirements-dev.txt

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install Plugin
        run: maturin develop --features dynamic
    
      - name: Test with pytest
        run: pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}


