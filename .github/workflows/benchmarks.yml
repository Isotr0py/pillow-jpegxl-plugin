name: Benchmarks

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
  RUST_BACKTRACE: 1

jobs:
  benchmarks:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # we only use macos for fast testing
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Run benchmarks scripts
        run: |
          pip install -e .
          python benchmarks/benchmarks_encode.py -i test/images/bench.png -o benchmarks-results-${{ matrix.python-version }}.json

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks-results-${{ matrix.python-version }}
          path: benchmarks-results-${{ matrix.python-version }}.json
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}


